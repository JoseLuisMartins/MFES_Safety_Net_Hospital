class Patient is subclass of Person
instance variables
	private clinicalObservations: seq of Utils`String := [];
	private static currId : nat := 0;
	private id : nat := currId;
	
operations
	public Patient : Utils`String * nat * Utils`String ==> Patient
	Patient(n, a, d) == (
		atomic (
			name := n;
			age:= a;
			clinicalObservations:= clinicalObservations ^ [d];
			currId := currId + 1;
		);
		return self;
	);
		
	--get patient id
	public pure getId: () ==> nat
	getId() == (
		return id
	);
	
	--	getName
	 public getName: () ==> Utils`String
	 getName() == (
	 		return retName(); 	
	 );

	 --	getAge	
	 public getAge: () ==> nat
	 getAge() == (
	 		return retAge(); 	
	 );
		
	--get clinical observations
	public pure getClinicalObservations: () ==> seq of Utils`String
	getClinicalObservations() == (
		return clinicalObservations
	);
	
	
	--add clinical observation
	public addObservation: Utils`String ==> ()
	addObservation(d) == (
		clinicalObservations := clinicalObservations ^ [d];
	)
	post len clinicalObservations = len clinicalObservations~ + 1 and
			 exists i in set inds clinicalObservations & clinicalObservations(i) = d;
	
	
end Patient
