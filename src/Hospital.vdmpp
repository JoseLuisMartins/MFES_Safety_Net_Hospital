class Hospital
instance variables
	private name: Utils`String := [];
	-- fazer type para location?
	private location: Utils`String := [];
	private max_doctors: nat1 := 1;
	private doctorsIds: set of nat := {};
	private static currId : nat := 0;
	private id : nat := currId;
	
	inv forall d in set doctorsIds & d in set dom SafetyNetNetwork`getInstance().getDoctors();
operations

	--constructor
	public Hospital: Utils`String * Utils`String * nat1 ==> Hospital
	Hospital(n,l,m_d) == (
		name := n;
		location := l;
		max_doctors := m_d;
		currId := currId + 1; 
		return self 
	);

	--get hospital name	
	public pure getName: () ==> Utils`String
	getName() == (
		return name
	);
	
	--get hospital id
	public pure getId: () ==> nat
	getId() == (
		return id
	);
	
	--get hospital doctors
	public pure getDoctorsIds: () ==> set of nat
	getDoctorsIds() == (
		return doctorsIds
	);
	
	--get hospital location
	public pure getLocation: () ==> Utils`String
	getLocation() == (
		return location
	);
	
	--add doctor
	public addDoctor: nat ==> ()
	addDoctor(doctorId) == (
		doctorsIds := doctorsIds union {doctorId}
	)
	pre doctorId not in set doctorsIds
	post doctorId in set doctorsIds; 

	
	--remove doctor	
	public removeDoctor: nat ==> ()
	removeDoctor(doctorId) == (
		doctorsIds := doctorsIds \ {doctorId}
	)
	pre doctorId in set doctorsIds
	post doctorId not in set doctorsIds; 

	
	
	
functions
-- TODO Define functiones here

end Hospital